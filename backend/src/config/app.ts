/**
 * app.ts - Cuida dos ajustes do nosso app (tipo as chaves da casa)
 * # Pra que serve?
 * - Pega as vari√°veis de ambiente (aqueles segredos que a gente coloca no .env)
 * - D√° valores seguros padr√£o pra n√£o quebrar se faltar algo
 * Feito por: Arthur Roberto Weege Pontes
 * Vers√£o: 1.2.0
 * Data: 2025-04-20 (Finalizado)
 * Altera√ß√µes:
 * - v1.0.0 (2025-03-10): Configura√ß√£o b√°sica das vari√°veis
 * - v1.1.0 (2025-04-05): Adicionadas valida√ß√µes de seguran√ßa para produ√ß√£o
 * - v1.2.0 (2025-04-20): Suporte a m√∫ltiplos ambientes (dev/staging/prod)
 */

import dotenv from "dotenv";

// Carrega as vari√°veis de ambiente do arquivo .env
dotenv.config();

// Como a gente organiza as configura√ß√µes (o que precisa pra app funcionar)

export interface AppConfig {
  PORT: number;
  JWT_SECRET: string;
  JWT_EXPIRES_IN: string;
  DATABASE_URL: string;
  ENVIRONMENT: string;
}

// Valores de seguran√ßa pra quando a gente t√° desenvolvendo (pra n√£o ter que configurar tudo)
const DEFAULT_PORT = 3000;
const DEFAULT_JWT_SECRET = "default-secret";
const DEFAULT_JWT_EXPIRES_IN = "8h";
const DEFAULT_DATABASE_URL = "postgresql://user:password@localhost:5432/db";
const DEFAULT_ENVIRONMENT = "development";

// Pega a porta do servidor: se n√£o tiver definida, usa a 3000 (t√° bom pra testar)
const getPort = (): number =>
  parseInt(process.env.PORT || DEFAULT_PORT.toString());

// Pega o segredo do JWT: se n√£o tiver, usa um padr√£o (s√≥ pra desenvolvimento, hein!)
const getJwtSecret = (): string => process.env.JWT_SECRET || DEFAULT_JWT_SECRET;

// Pega o tempo de expira√ß√£o do token: se n√£o tiver, usa 8 horas (pra n√£o ficar logando toda hora)
const getJwtExpiresIn = (): string =>
  process.env.JWT_EXPIRES_IN || DEFAULT_JWT_EXPIRES_IN;

// Pega o endere√ßo do banco de dados: se n√£o tiver, usa um local (s√≥ pra desenvolvimento)
const getDatabaseUrl = (): string =>
  process.env.DATABASE_URL || DEFAULT_DATABASE_URL;

// Descobre se a gente t√° em desenvolvimento ou produ√ß√£o (pra se comportar diferente)
const getEnvironment = (): string =>
  process.env.NODE_ENV || DEFAULT_ENVIRONMENT;

// Junta tudo pra formar a configura√ß√£o do app
const config: AppConfig = {
  PORT: getPort(),
  JWT_SECRET: getJwtSecret(),
  JWT_EXPIRES_IN: getJwtExpiresIn(),
  DATABASE_URL: getDatabaseUrl(),
  ENVIRONMENT: getEnvironment(),
};

// Se tiver em produ√ß√£o e usando segredo padr√£o: PERIGO! (avisa no console)
if (
  config.JWT_SECRET === DEFAULT_JWT_SECRET &&
  config.ENVIRONMENT === "production"
) {
  console.warn(
    "PERIGO: T√° usando segredo padr√£o do JWT em produ√ß√£o! Isso √© furada! üö®"
  );
}

// Em produ√ß√£o, o endere√ßo do banco √© obrigat√≥rio! Se faltar, quebra tudo logo no come√ßo
if (!config.DATABASE_URL && config.ENVIRONMENT === "production") {
  throw new Error(
    "Faltou o DATABASE_URL! Em produ√ß√£o isso √© obrigat√≥rio, amig√£o!"
  );
}

export default config;
